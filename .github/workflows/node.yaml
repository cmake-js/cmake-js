name: Test

on:
  push:
  pull_request:

jobs:
  # test:
  #   name: Run tests for ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.libc }}
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         # windows
  #         - os: windows-2022
  #           arch: x64
  #         - os: windows-2025
  #           arch: x64
  #         - os: windows-2022
  #           arch: x86
  #         - os: windows-11-arm
  #           arch: arm64
  #           node-version: 20.x
  #         # macos
  #         - os: macos-13
  #           arch: x64
  #         - os: macos-14
  #           arch: arm64
  #         # linux
  #         - os: ubuntu-22.04
  #           arch: x64
  #         - os: ubuntu-24.04
  #           arch: x64
  #         - os: ubuntu-22.04-arm
  #           arch: arm64
  #         - os: ubuntu-24.04-arm
  #           arch: arm64
  #         # linux-libc
  #         - os: ubuntu-24.04-arm
  #           arch: arm
  #           docker-arch: linux/arm/v7
  #           docker-image: node:18-bookworm
  #         # linux-musl
  #         - os: ubuntu-latest
  #           arch: x64
  #           docker-arch: linux/amd64
  #           docker-image: node:18-alpine
  #           libc: musl

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Use Node.js
  #       if: ${{ !matrix.docker-arch }}
  #       uses: actions/setup-node@v3
  #       with:
  #         architecture: ${{ matrix.arch }}
  #         node-version: ${{ matrix.node-version || '18.x' }}

  #     - name: Cache cmakejs cache
  #       if: ${{ !matrix.docker-arch }}
  #       uses: actions/cache@v4
  #       with:
  #         key: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.libc }}
  #         path: |
  #           .cache

  #     - name: run tests
  #       if: ${{ !matrix.docker-arch }}
  #       shell: bash
  #       run: |
  #         yarn install
  #         yarn build
  #         yarn test:cmake
  #       env:
  #         CI: true
  #         npm_config_build_from_source: true

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #       if: matrix.docker-arch
  #     - name: run tests (in docker)
  #       uses: addnab/docker-run-action@v3
  #       if: matrix.docker-arch
  #       with:
  #         image: ${{ matrix.docker-image }}
  #         # shell: bash
  #         options: --platform=${{ matrix.docker-arch }} -v ${{ github.workspace }}:/work -e CI=1
  #         run: |
  #           if command -v apt-get &> /dev/null
  #           then
  #             apt-get update
  #             apt-get install -y cmake ninja-build
  #           elif command -v apk &> /dev/null
  #           then
  #             apk update
  #             apk add cmake make g++ gcc samurai
  #           fi

  #           cd /work

  #           yarn install
  #           yarn build
  #           yarn test:cmake

  test-cmake-versions:
    name: Run tests against supported cmake versions
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Cache cmakejs cache
        uses: actions/cache@v4
        with:
          key: cmake-versions-ubuntu
          path: |
            .cache

      - name: Setup upterm session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

      - name: run tests
        shell: bash
        run: |
          yarn install
          yarn build
          yarn test:cmake-versions
        env:
          CI: true
