{"version":3,"names":[],"mappings":"","sources":["vsDetect.js"],"sourcesContent":["\"use strict\";\r\nlet processHelpers = require(\"./processHelpers\");\r\nlet Bluebird = require(\"bluebird\");\r\nlet async = Bluebird.coroutine;\r\nlet _ = require(\"lodash\");\r\n\r\nlet vsDetect = {\r\n    isInstalled: async(function* (version) {\r\n        return (yield this._isVSInstalled(version)) ||\r\n            (yield this._isVSvNextInstalled(version)) ||\r\n            (yield this._isBuildToolsInstalled(version));\r\n    }),\r\n    _isBuildToolsInstalled: async(function*(version) {\r\n        let mainVer = version.split(\".\")[0];\r\n        let key; \r\n        let testPhrase;\r\n        if (Number(mainVer) >= 15) {\r\n            key = \"HKLM\\\\SOFTWARE\\\\Classes\\\\Installer\\\\Dependencies\\\\Microsoft.VS.windows_toolscore,v\" + mainVer;\r\n            testPhrase = \"Version\";\r\n        } \r\n        else {\r\n            key = \"HKLM\\\\SOFTWARE\\\\Classes\\\\Installer\\\\Dependencies\\\\Microsoft.VS.VisualCppBuildTools_x86_enu,v\" + mainVer;\r\n            testPhrase = \"Visual C++\";\r\n        }\t\r\n        let command = \"reg query \\\"\" + key + \"\\\"\";\r\n        try {\r\n            let stdout = yield processHelpers.exec(command);\r\n            return stdout && stdout.indexOf(testPhrase) > 0;\r\n        }\r\n        catch (e) {\r\n            _.noop(e);\r\n        }\r\n        return false;\r\n    }),\r\n    _isVSInstalled: async(function*(version) {\r\n        // On x64 this will look for x64 keys only, but if VS and compilers installed properly,\r\n        // it will write it's keys to 64 bit registry as well.\r\n        let command = \"reg query \\\"HKLM\\\\Software\\\\Microsoft\\\\VisualStudio\\\\\" + version + \"\\\"\";\r\n        try {\r\n            let stdout = yield processHelpers.exec(command);\r\n            if (stdout) {\r\n                let lines = stdout.split(\"\\r\\n\").filter(function (line) {\r\n                    return line.length > 10;\r\n                });\r\n                if (lines.length >= 4) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            _.noop(e);\r\n        }\r\n        return false;\r\n    }),\r\n    _isVSvNextInstalled: async(function*(version) {\r\n        let mainVer = version.split(\".\")[0];\r\n        let command = \"reg query \\\"HKLM\\\\SOFTWARE\\\\Classes\\\\Installer\\\\Dependencies\\\\Microsoft.VisualStudio.MinShell.Msi,v\" + mainVer + \"\\\"\";\r\n        try {\r\n            let stdout = yield processHelpers.exec(command);\r\n            if (stdout) {\r\n                let lines = stdout.split(\"\\r\\n\").filter(function (line) {\r\n                    return line.length > 10;\r\n                });\r\n                if (lines.length >= 3) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            _.noop(e);\r\n        }\r\n        return false;\r\n    })\r\n};\r\n\r\nmodule.exports = vsDetect;\r\n"],"file":"vsDetect.js"}