{"version":3,"names":[],"mappings":"","sources":["locateNAN.js"],"sourcesContent":["\"use strict\";\nlet Promise = require(\"bluebird\");\nlet fs = require(\"fs-extra\");\nlet path = require(\"path\");\nlet async = Promise.coroutine;\nlet _ = require(\"lodash\");\n\nlet isNANModule = async(function* (dir) {\n    let h = path.join(dir, \"nan.h\");\n    try {\n        let stat = yield fs.stat(h);\n        return stat.isFile();\n    }\n    catch (e) {\n        _.noop(e);\n        return false;\n    }\n});\n\nlet isNodeJSProject = async(function* (dir) {\n    let pjson = path.join(dir, \"package.json\");\n    let node_modules = path.join(dir, \"node_modules\");\n    try {\n        let stat = yield fs.stat(pjson);\n        if (stat.isFile()) {\n            return true;\n        }\n        stat = yield fs.stat(node_modules);\n        if (stat.isDirectory()) {\n            return true;\n        }\n    }\n    catch (e) {\n        _.noop(e);\n    }\n    return false;\n});\n\nlet locateNAN = module.exports = async(function* (projectRoot) {\n    if (locateNAN.__projectRoot) {\n        projectRoot = locateNAN.__projectRoot;\n    }\n    let result = yield isNodeJSProject(projectRoot);\n    if (!result) {\n        return null;\n    }\n    let nanModulePath = path.join(projectRoot, \"node_modules\", \"nan\");\n    result = yield isNANModule(nanModulePath);\n    if (result) {\n        return nanModulePath;\n    }\n\n    // Goto upper level:\n    return yield locateNAN(goUp(projectRoot));\n});\n\nfunction goUp(dir) {\n    let items = dir.split(path.sep);\n    let scopeItem = items[items.length - 2];\n    if (scopeItem && scopeItem[0] === \"@\") {\n        // skip scope\n        dir = path.join(dir, \"..\");\n    }\n    dir = path.join(dir, \"..\", \"..\");\n    return path.normalize(dir);\n}\n"],"file":"locateNAN.js"}