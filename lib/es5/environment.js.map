{"version":3,"names":[],"mappings":"","sources":["environment.js"],"sourcesContent":["\"use strict\";\nlet os = require(\"os\");\nlet isIOJS = require(\"is-iojs\");\nlet which = require(\"which\");\nlet _ = require(\"lodash\");\n\nlet environment = module.exports = {\n    moduleVersion: require(\"../../package.json\").version,\n    platform: os.platform(),\n    isWin: os.platform() === \"win32\",\n    isLinux: os.platform() === \"linux\",\n    isOSX: os.platform() === \"darwin\",\n    arch: os.arch(),\n    isX86: os.arch() === \"ia32\",\n    isX64: os.arch() === \"x64\",\n    isArm: os.arch() === \"arm\",\n    runtime: isIOJS ? \"iojs\" : \"node\",\n    runtimeVersion: process.versions.node,\n    home: process.env[(os.platform() === \"win32\") ? \"USERPROFILE\" : \"HOME\"],\n    EOL: os.EOL\n};\n\nObject.defineProperties(environment, {\n    isPosix: {\n        get: function () {\n            return !this.isWin;\n        }\n    },\n    _isNinjaAvailable: {\n        value: null,\n        writable: true\n    },\n    isNinjaAvailable: {\n        get: function() {\n            if (this._isNinjaAvailable === null) {\n                this._isNinjaAvailable = false;\n                try {\n                    if (which.sync(\"ninja\")) {\n                        this._isNinjaAvailable = true;\n                    }\n                }\n                catch (e) {\n                    _.noop(e);\n                }\n            }\n            return this._isNinjaAvailable;\n        }\n    },\n    _isMakeAvailable: {\n        value: null,\n        writable: true\n    },\n    isMakeAvailable: {\n        get: function() {\n            if (this._isMakeAvailable === null) {\n                this._isMakeAvailable = false;\n                try {\n                    if (which.sync(\"make\")) {\n                        this._isMakeAvailable = true;\n                    }\n                }\n                catch (e) {\n                    _.noop(e);\n                }\n            }\n            return this._isMakeAvailable;\n        }\n    },\n    _isGPPAvailable: {\n        value: null,\n        writable: true\n    },\n    isGPPAvailable: {\n        get: function() {\n            if (this._isGPPAvailable === null) {\n                this._isGPPAvailable = false;\n                try {\n                    if (which.sync(\"g++\")) {\n                        this._isGPPAvailable = true;\n                    }\n                }\n                catch (e) {\n                    _.noop(e);\n                }\n            }\n            return this._isGPPAvailable;\n        }\n    },\n    _isClangAvailable: {\n        value: null,\n        writable: true\n    },\n    isClangAvailable: {\n        get: function() {\n            if (this._isClangAvailable === null) {\n                this._isClangAvailable = false;\n                try {\n                    if (which.sync(\"clang++\")) {\n                        this._isClangAvailable = true;\n                    }\n                }\n                catch (e) {\n                    _.noop(e);\n                }\n            }\n            return this._isClangAvailable;\n        }\n    }\n});"],"file":"environment.js"}