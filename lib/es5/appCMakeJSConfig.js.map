{"version":3,"names":[],"mappings":"","sources":["appCMakeJSConfig.js"],"sourcesContent":["\"use strict\";\nlet path = require(\"path\");\nlet _ = require(\"lodash\");\n\nfunction getConfig(lookPath, log) {\n    let pjsonPath = path.join(lookPath, \"package.json\");\n    log.silly(\"CFG\", \"Looking for package.json in: '\" + pjsonPath + \"'.\");\n    try {\n        let json = require(pjsonPath);\n        log.silly(\"CFG\", \"Loaded:\\n\" + JSON.stringify(json));\n        if (_.isPlainObject(json) && _.isPlainObject(json[\"cmake-js\"])) {\n            log.silly(\"CFG\", \"Config found.\");\n            return json[\"cmake-js\"];\n        }\n        else {\n            log.silly(\"CFG\", \"Config not found.\");\n            return null;\n        }\n    }\n    catch (e) {\n        log.silly(\"CFG\", \"'package.json' not found.\");\n        return null;\n    }\n}\n\nmodule.exports = function (projectPath, log) {\n    log.verbose(\"CFG\", \"Looking for application level CMake.js config in '\" + projectPath + \".\");\n    let currPath = projectPath;\n    let lastConfig = null;\n    let currConfig;\n    for (; ;) {\n        currConfig = getConfig(currPath, log);\n        if (currConfig) {\n            lastConfig = currConfig;\n        }\n        try {\n            log.silly(\"CFG\", \"Looking for parent path.\");\n            let lastPath = currPath;\n            currPath = path.normalize(path.join(currPath, \"..\"));\n            if (lastPath === currPath) {\n                currPath = null; // root\n            }\n            if (currPath) {\n                log.silly(\"CFG\", \"Parent path: '\" + currPath + \"'.\");\n            }\n        }\n        catch (e) {\n            log.silly(\"CFG\", \"Exception:\\n\" + e.stack);\n            break;\n        }\n        if (currPath === null) {\n            log.silly(\"CFG\", \"Parent path with package.json file doesn't exists. Done.\");\n            break;\n        }\n    }\n    if (lastConfig) {\n        log.verbose(\"CFG\", \"Application level CMake.js config found:\\n\" + JSON.stringify(lastConfig));\n    }\n    else {\n        log.verbose(\"CFG\", \"Application level CMake.js config doesn't exists.\");\n    }\n    return lastConfig;\n};\n"],"file":"appCMakeJSConfig.js"}