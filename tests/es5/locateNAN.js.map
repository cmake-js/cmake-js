{"version":3,"names":[],"mappings":"","sources":["locateNAN.js"],"sourcesContent":["\"use strict\";\n/* global describe,it */\n\nlet Bluebird = require(\"bluebird\");\nlet async = Bluebird.coroutine;\nlet locateNAN = require(\"../../\").locateNAN;\nlet path = require(\"path\");\nlet assert = require(\"assert\");\n\n/*\n\nDependency tree for the test\n\nfixtures/project\n    dep1\n        dep3\n    @scope/dep2\n\n*/\n\ndescribe(\"locateNAN\", function () {\n    const PROJECT_DIR = path.resolve(__dirname, \"..\", \"fixtures\", \"project\");\n    const NAN_DIR = path.join(PROJECT_DIR, \"node_modules\", \"nan\");\n\n    it(\"should locate NAN from dependency\", function () {\n        let dir = path.join(PROJECT_DIR, \"node_modules\", \"dep-1\");\n        return async(function*() {\n            let nan = yield locateNAN(dir);\n            assert.equal(nan, NAN_DIR);\n        })();\n    });\n\n    it(\"should locate NAN from nested dependency\", function () {\n        let dir = path.join(PROJECT_DIR, \"node_modules\", \"dep-1\", \"node_modules\", \"dep-3\");\n        return async(function*() {\n            let nan = yield locateNAN(dir);\n            assert.equal(nan, NAN_DIR);\n        })();\n    });\n\n    it(\"should locate NAN from scoped dependency\", function () {\n        let dir = path.join(PROJECT_DIR, \"node_modules\", \"@scope\", \"dep-2\");\n        return async(function*() {\n            let nan = yield locateNAN(dir);\n            assert.equal(nan, NAN_DIR);\n        })();\n    });\n});\n"],"file":"locateNAN.js"}